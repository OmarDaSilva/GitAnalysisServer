// This is a generated file, modify: generate/templates/templates/class_header.h

#ifndef GITPATH_H
#define GITPATH_H
#include <nan.h>
#include <string>
#include <utility>
#include <algorithm>
#include <set>
#include <unordered_set>
#include <sstream>

#include "async_baton.h"
#include "async_worker.h"
#include "cleanup_handle.h"
#include "context.h"
#include "lock_master.h"
#include "nodegit_wrapper.h"
#include "promise_completion.h"
#include "reference_counter.h"
#include "worker_pool.h"

extern "C" {
#include <git2.h>
#include <git2/sys/path.h>
}

#include "../include/typedefs.h"


using namespace node;
using namespace v8;


class GitPath : public
  Nan::ObjectWrap
{
   public:
    GitPath(const GitPath &) = delete;
    GitPath(GitPath &&) = delete;
    GitPath &operator=(const GitPath &) = delete;
    GitPath &operator=(GitPath &&) = delete;

    static void InitializeComponent (v8::Local<v8::Object> target, nodegit::Context *nodegitContext);

       

  private:

    static NAN_METHOD(IsGitfile);
};

#endif
